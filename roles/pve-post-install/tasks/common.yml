#
# This file lists the tasks to be executed just after the server has been installed with the Debian preseed ISO file.
# These tasks are common to both host1 and host2
#
---

#
# package management
#

- name: Configure debian/proxmox repos 1/2
  become: yes
  copy:
    dest: "/etc/apt/sources.list"
    content: |
      ## NEW CONFIGURATION FOR USING THE OINIS REPO:
      # regular updates
      deb [trusted=yes] http://90.84.143.215/debiandeb10/ ./
      # security updates
      deb [trusted=yes] http://90.84.143.215/debiansec10/ ./
      # pve enterprise
      deb [trusted=yes] http://90.84.143.215/pvedeb6.0/ ./

- name: Configure debian/proxmox repos 2/2
  become: yes
  copy:
    dest: "/etc/apt/sources.list.d/pve-enterprise.list"
    content: |
      ## OLD CONFIGURATION:
      #deb https://enterprise.proxmox.com/debian buster pve-enterprise

- name: Update repositories
  become: yes
  apt:
    update_cache: yes
    dpkg_options: 'force-confold,force-confdef'

- name: Upgrade repositories
  become: yes
  apt:
    upgrade: dist
    dpkg_options: 'force-confold,force-confdef'

- name: Install PVE packages. THIS MAY TAKE A WHILE...
  become: yes
  apt:
    name: "{{ pve_packages }}"
    dpkg_options: 'force-confold,force-confdef'
  vars:
    pve_packages:
    - proxmox-ve
    - postfix
    - open-iscsi

- name: Remove "os-prober" package (recommended by Proxmox)
  become: yes
  apt:
    name: os-prober
    state: absent
    dpkg_options: 'force-confold,force-confdef'

- name: Install additional packages
  become: yes
  apt:
    name: "{{ add_packages }}"
    dpkg_options: 'force-confold,force-confdef'
  vars:
    add_packages:
    - glusterfs-server
    - lshw
    - tmux
    - htop
    - atop
    - iftop
    - nload
    - curl
    - ethtool
    - iproute2
    - ntpdate
    - parted
    - python-pip

#
# disks management
#

- name: "Config disks: add a new partition #1"
  become: yes
  parted: 
    device: /dev/{{datadisk}}
    unit: MiB
    number: 1
    state: present

- name: "Config disk: create a new empty GPT partition table on disk {{datadisk}}"
  become: yes
  parted:
    device: /dev/{{datadisk}}
    unit: MiB
    label: gpt

- name: "Config disk: create an ext4 file system on {{datadisk}}"
  become: yes
  filesystem:
    fstype: ext4
    device: /dev/{{datadisk}}
    
- name: "Mount /mnt/data on {{datadisk}}"
  become: yes
  mount:
    path: /mnt/data
    src: /dev/{{datadisk}}
    fstype: mounted
    state: present

#
# PVE management
#

- name: Disable login subscription message
  become: yes
  replace:
    path: /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
    regexp: "data.status !== 'Active'"
    replace: "false"

#
# network management
#

- name: Config DNS servers
  become: yes
  shell: |
    echo "nameserver 193.251.253.128" >> /etc/resolv.conf
    echo "nameserver 193.251.253.129" >> /etc/resolv.conf

- name: Config NTP servers 1
  become: yes
  replace:
    path: /etc/default/ntpdate
    regexp: 'NTPDATE_USE_NTP_CONF=yes'
    replace: 'NTPDATE_USE_NTP_CONF=no'

- name: Config NTP servers 2
  become: yes
  replace:
    backup: yes
    path: /etc/default/ntpdate
    regexp: 'NTPSERVERS=.*'
    replace: 'NTPSERVERS="ntp1.opentransit.net ntp2.opentransit.net"'
  
# pip package install -> the HTTP proxy is configured in the group_vars
- name: Install python packages
  become: yes
  pip:
    name: netifaces, pexpect

- name: Create directory for python scripts
  become: yes
  file: path=/home/ansible/python_scripts
    state=directory
    owner=ansible
    group=ansible
    mode=755

- name: Copy the network-conf python script into the folder
  become: yes
  copy: 
    src=network-conf.py 
    dest=/home/ansible/python_scripts/network-conf.py
    owner=ansible
    group=ansible
    mode=777 

# management interface
- name: Execute network configuration script for the management interface
  become: yes
  script: network-conf.py -g1 -n0
  register: script_out

- name: Set a new management interface variable
  set_fact:
    itf_mngt: "{{script_out.stdout | trim}}"

- debug: var=itf_mngt

- name: ensure the management interface is properly configured
  fail:
    msg: "network-script: error while selecting the management interface"
  when: "'none' in itf_mngt"

# client-serving interface
- name: Execute network configuration script for the client-serving interface
  become: yes
  script: network-conf.py -g3 -n0
  register: script_out

- name: Set a new cient-serving interface variable
  set_fact:
    itf_client: "{{script_out.stdout | trim}}"

- debug: var=itf_client

- name: ensure the client-serving interface is properly configured
  fail:
    msg: "network-script: error while selecting the client interface"
  when: "'none' in itf_client"
  
# intrasite interface
- name: Execute network configuration script for the intrasite interface
  become: yes
  script: network-conf.py -g3 -n1
  register: script_out

- name: Set a new intrasite interface variable
  set_fact:
    itf_intra: "{{script_out.stdout | trim}}"

- debug: var=itf_intra

- name: Ensure the intrasite interface is properly configured
  fail:
    msg: "network-script: error while selecting the client interface"
  when: "'none' in itf_intra"
  
# - name: Remove 'iface ens2f0 inet manual' kind of lines in the interfaces network configuration file (client-serving)
#   become: yes
#   replace:
#     backup: yes
#     path: /etc/network/interfaces
#     regexp: "iface {{itf_client}} inet manual"
#     replace: ''

# - name: Remove 'iface ens2f0 inet manual' kind of lines in the interfaces network configuration file (intrasite)
#   become: yes
#   replace:
#     backup: yes
#     path: /etc/network/interfaces
#     regexp: "iface {{itf_intra}} inet manual"
#     replace: ''

- name: Configure linux bridge in the interfaces network configuration file
  become: yes
  copy:
    dest: /etc/network/interfaces
    content: |
      auto lo
      iface lo inet loopback

      iface {{itf_mngt}} inet manual
      auto vmbr0
      iface vmbr0 inet static
        address {{vmbr0_ip4}}
        gateway {{vmbr0_gw4}}
        bridge_ports {{itf_mngt}}
        bridge_stp off
        bridge_fd 0

      iface {{itf_client}} inet manual
      auto vmbr1
      iface vmbr1 inet manual
        bridge_ports {{itf_client}}
        bridge_stp off
        bridge_fd 0
        bridge_maxwait 0
              
      iface {{itf_intra}} inet manual
      auto vmbr2
      iface vmbr2 inet manual
        bridge_ports {{itf_intra}}
        bridge_stp off
        bridge_fd 0
        bridge_maxwait 0

- name: Restart network
  become: yes 
  service:
    name: networking
    state: restarted